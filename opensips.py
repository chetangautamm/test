#!/usr/bin/env python
# coding: utf-8

# In[1]:


import requests
import json
import sys
import logging
import os
import time
import urllib3

#Token Generation
url = "https://20.204.139.200:9999/osm"
def get_token(url):
    payload = json.dumps({ "username": "admin", "password": "admin", "project_id": "admin" })
    headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' }
    r1 = requests.request("POST", url, headers=headers, data=payload, verify=False)
    if r1.status_code == 200:
        token = r1.json()['id']
        return token
    else:
        print("Failed to get token.")   

token = get_token(url+"/admin/v1/tokens")
print(f"token: {token}")
urllib3.disable_warnings()


# In[22]:


def get_vim1_id(url, token):
    headers = { 'Authorization': f'Bearer {token}', 'Accept': 'application/json' }
    response = requests.request("GET", url, headers=headers, verify=False)
    vims = response.json()
    for vim in vims:
        if vim['name'] == "OpenstackR-1":
            return vim['_id']  
        
vimAccountId1 = get_vim1_id(url+f"/admin/v1/vims", token)
print(f"vimAccountId: {vimAccountId1}")


# In[23]:


def upload_packages(url, file, token):
    headers = { 'Authorization': f'Bearer {token}', 'Content-Type': 'application/zip', 'Accept': 'application/json' }
    payload = open(file, 'rb')
    response = requests.request("POST", url, headers=headers, data=payload, verify=False)
    print(response.text)
    return response.json()['id']


# In[24]:


def create_ns_instance(url, token, nsdId, vimAccountId):
    headers = { 'Authorization': f'Bearer {token}', 'Accept': 'application/json', 'Content-Type': 'application/json' }
    payload = json.dumps({ "nsName": "opensips", "nsdId": f"{nsdId}", "vimAccountId": f"{vimAccountId1}", "nsDescription": "Generated by Automation" })
    response = requests.request("POST", url, headers=headers, data=payload, verify=False)
    print(response.text)
    return response.json()['id']


# In[25]:


def instantiate_ns(url, token, nsdId, vimAccountId):
    headers = { 'Authorization': f'Bearer {token}', 'Accept': 'application/json', 'Content-Type': 'application/json' }
    payload = json.dumps({ "nsName": "opensips", "nsdId": f"{nsdId}", "vimAccountId": f"{vimAccountId1}", "nsDescription": "Generated by Automation" })
    response = requests.request("POST", url, headers=headers, data=payload, verify=False)
    print(response.text)
    return response.json()['id']


# In[26]:


package_directory = "/var/lib/jenkins/workspace/osm-9-pipeline/"
vnfpackage = "opensips-knf.tar.gz"
nspackage = "opensips-kns.tar.gz"
upload_packages(url+"/vnfpkgm/v1/vnf_packages_content", package_directory + vnfpackage, token)
nsdId = upload_packages(url+"/nsd/v1/ns_descriptors_content", package_directory + nspackage, token)


# In[27]:


nsInstanceId = create_ns_instance(url+"/nslcm/v1/ns_instances", token, nsdId, vimAccountId1)
print(f"nsInstanceId: {nsInstanceId}")

nsLcmOpOccId = instantiate_ns(url+f"/nslcm/v1/ns_instances/{nsInstanceId}/instantiate", token, nsdId, vimAccountId1)
print(f"Instantiate nsLcmOpOccId: {nsLcmOpOccId}")


# In[ ]:




